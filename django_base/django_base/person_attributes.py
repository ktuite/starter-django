from django.db import models
from django.utils.translation import ugettext as _


AGE_CHOICES = (
    ('unknown', 'age?'),
    ('less13', 'under 13'),
    ('13-15', '13-15'),
    ('16-19', '16-19'),
    ('20-29','20-29'),
    ('30-39','30-39'),
    ('40-49','40-49'),
    ('50-59','50-59'),
    ('60-69','60-69'),
    ('70-79','70-79'),
    ('80-89','80-89'),
    ('90-99','90-99'),
    ('100-110','100-110'),
    ('more111','over 110'),
)


# http://xml.coverpages.org/country3166.html
COUNTRIES = (
   ('ZZ', 'country?'),
   ('US', 'United States of America'), 
   ('AF', 'Afghanistan'), 
   ('AL', 'Albania'), 
   ('DZ', 'Algeria'), 
   ('AS', 'American Samoa'), 
   ('AD', 'Andorra'), 
   ('AO', 'Angola'), 
   ('AI', 'Anguilla'), 
   ('AQ', 'Antarctica'), 
   ('AG', 'Antigua & Barbuda'), 
   ('AR', 'Argentina'), 
   ('AM', 'Armenia'), 
   ('AW', 'Aruba'), 
   ('AU', 'Australia'), 
   ('AT', 'Austria'), 
   ('AZ', 'Azerbaijan'), 
   ('BS', 'Bahama'), 
   ('BH', 'Bahrain'), 
   ('BD', 'Bangladesh'), 
   ('BB', 'Barbados'), 
   ('BY', 'Belarus'), 
   ('BE', 'Belgium'), 
   ('BZ', 'Belize'), 
   ('BJ', 'Benin'), 
   ('BM', 'Bermuda'), 
   ('BT', 'Bhutan'), 
   ('BO', 'Bolivia'), 
   ('BA', 'Bosnia and Herzegovina'), 
   ('BW', 'Botswana'), 
   ('BV', 'Bouvet Island'), 
   ('BR', 'Brazil'), 
   ('IO', 'British Indian Ocean Territory'), 
   ('VG', 'British Virgin Islands'), 
   ('BN', 'Brunei Darussalam'), 
   ('BG', 'Bulgaria'), 
   ('BF', 'Burkina Faso'), 
   ('BI', 'Burundi'), 
   ('KH', 'Cambodia'), 
   ('CM', 'Cameroon'), 
   ('CA', 'Canada'), 
   ('CV', 'Cape Verde'), 
   ('KY', 'Cayman Islands'), 
   ('CF', 'Central African Republic'), 
   ('TD', 'Chad'), 
   ('CL', 'Chile'), 
   ('CN', 'China'), 
   ('CX', 'Christmas Island'), 
   ('CC', 'Cocos (Keeling) Islands'), 
   ('CO', 'Colombia'), 
   ('KM', 'Comoros'), 
   ('CG', 'Congo'), 
   ('CK', 'Cook Iislands'), 
   ('CR', 'Costa Rica'), 
   ('HR', 'Croatia'), 
   ('CU', 'Cuba'), 
   ('CY', 'Cyprus'), 
   ('CZ', 'Czech Republic'), 
   ('DK', 'Denmark'), 
   ('DJ', 'Djibouti'), 
   ('DM', 'Dominica'), 
   ('DO', 'Dominican Republic'), 
   ('TP', 'East Timor'), 
   ('EC', 'Ecuador'), 
   ('EG', 'Egypt'), 
   ('SV', 'El Salvador'), 
   ('GQ', 'Equatorial Guinea'), 
   ('ER', 'Eritrea'), 
   ('EE', 'Estonia'), 
   ('ET', 'Ethiopia'), 
   ('FK', 'Falkland Islands (Malvinas)'), 
   ('FO', 'Faroe Islands'), 
   ('FJ', 'Fiji'), 
   ('FI', 'Finland'), 
   ('FR', 'France'), 
   ('FX', 'France, Metropolitan'), 
   ('GF', 'French Guiana'), 
   ('PF', 'French Polynesia'), 
   ('TF', 'French Southern Territories'), 
   ('GA', 'Gabon'), 
   ('GM', 'Gambia'), 
   ('GE', 'Georgia'), 
   ('DE', 'Germany'), 
   ('GH', 'Ghana'), 
   ('GI', 'Gibraltar'), 
   ('GR', 'Greece'), 
   ('GL', 'Greenland'), 
   ('GD', 'Grenada'), 
   ('GP', 'Guadeloupe'), 
   ('GU', 'Guam'), 
   ('GT', 'Guatemala'), 
   ('GN', 'Guinea'), 
   ('GW', 'Guinea-Bissau'), 
   ('GY', 'Guyana'), 
   ('HT', 'Haiti'), 
   ('HM', 'Heard & McDonald Islands'), 
   ('HN', 'Honduras'), 
   ('HK', 'Hong Kong'), 
   ('HU', 'Hungary'), 
   ('IS', 'Iceland'), 
   ('IN', 'India'), 
   ('ID', 'Indonesia'), 
   ('IQ', 'Iraq'), 
   ('IE', 'Ireland'), 
   ('IR', 'Islamic Republic of Iran'), 
   ('IL', 'Israel'), 
   ('IT', 'Italy'), 
   ('CI', 'Ivory Coast'), 
   ('JM', 'Jamaica'), 
   ('JP', 'Japan'), 
   ('JO', 'Jordan'), 
   ('KZ', 'Kazakhstan'), 
   ('KE', 'Kenya'), 
   ('KI', 'Kiribati'), 
   ('KP', "Korea, Democratic People's Republic of"), 
   ('KR', 'Korea, Republic of'), 
   ('KW', 'Kuwait'), 
   ('KG', 'Kyrgyzstan'), 
   ('LA', "Lao People's Democratic Republic"), 
   ('LV', 'Latvia'), 
   ('LB', 'Lebanon'), 
   ('LS', 'Lesotho'), 
   ('LR', 'Liberia'), 
   ('LY', 'Libyan Arab Jamahiriya'), 
   ('LI', 'Liechtenstein'), 
   ('LT', 'Lithuania'), 
   ('LU', 'Luxembourg'), 
   ('MO', 'Macau'), 
   ('MG', 'Madagascar'), 
   ('MW', 'Malawi'), 
   ('MY', 'Malaysia'), 
   ('MV', 'Maldives'), 
   ('ML', 'Mali'), 
   ('MT', 'Malta'), 
   ('MH', 'Marshall Islands'), 
   ('MQ', 'Martinique'), 
   ('MR', 'Mauritania'), 
   ('MU', 'Mauritius'), 
   ('YT', 'Mayotte'), 
   ('MX', 'Mexico'), 
   ('FM', 'Micronesia'), 
   ('MD', 'Moldova, Republic of'), 
   ('MC', 'Monaco'), 
   ('MN', 'Mongolia'), 
   ('MS', 'Monserrat'), 
   ('MA', 'Morocco'), 
   ('MZ', 'Mozambique'), 
   ('MM', 'Myanmar'), 
   ('NA', 'Namibia'), 
   ('NR', 'Nauru'), 
   ('NP', 'Nepal'), 
   ('NL', 'Netherlands'), 
   ('AN', 'Netherlands Antilles'), 
   ('NC', 'New Caledonia'), 
   ('NZ', 'New Zealand'), 
   ('NI', 'Nicaragua'), 
   ('NE', 'Niger'), 
   ('NG', 'Nigeria'), 
   ('NU', 'Niue'), 
   ('NF', 'Norfolk Island'), 
   ('MP', 'Northern Mariana Islands'), 
   ('NO', 'Norway'), 
   ('OM', 'Oman'), 
   ('PK', 'Pakistan'), 
   ('PW', 'Palau'), 
   ('PA', 'Panama'), 
   ('PG', 'Papua New Guinea'), 
   ('PY', 'Paraguay'), 
   ('PE', 'Peru'), 
   ('PH', 'Philippines'), 
   ('PN', 'Pitcairn'), 
   ('PL', 'Poland'), 
   ('PT', 'Portugal'), 
   ('PR', 'Puerto Rico'), 
   ('QA', 'Qatar'), 
   ('RE', 'Reunion'), 
   ('RO', 'Romania'), 
   ('RU', 'Russian Federation'), 
   ('RW', 'Rwanda'), 
   ('LC', 'Saint Lucia'), 
   ('WS', 'Samoa'), 
   ('SM', 'San Marino'), 
   ('ST', 'Sao Tome & Principe'), 
   ('SA', 'Saudi Arabia'), 
   ('SN', 'Senegal'), 
   ('SC', 'Seychelles'), 
   ('SL', 'Sierra Leone'), 
   ('SG', 'Singapore'), 
   ('SK', 'Slovakia'), 
   ('SI', 'Slovenia'), 
   ('SB', 'Solomon Islands'), 
   ('SO', 'Somalia'), 
   ('ZA', 'South Africa'), 
   ('GS', 'South Georgia and the South Sandwich Islands'), 
   ('ES', 'Spain'), 
   ('LK', 'Sri Lanka'), 
   ('SH', 'St. Helena'), 
   ('KN', 'St. Kitts and Nevis'), 
   ('PM', 'St. Pierre & Miquelon'), 
   ('VC', 'St. Vincent & the Grenadines'), 
   ('SD', 'Sudan'), 
   ('SR', 'Suriname'), 
   ('SJ', 'Svalbard & Jan Mayen Islands'), 
   ('SZ', 'Swaziland'), 
   ('SE', 'Sweden'), 
   ('CH', 'Switzerland'), 
   ('SY', 'Syrian Arab Republic'), 
   ('TW', 'Taiwan'), 
   ('TJ', 'Tajikistan'), 
   ('TZ', 'Tanzania, United Republic of'), 
   ('TH', 'Thailand'), 
   ('TG', 'Togo'), 
   ('TK', 'Tokelau'), 
   ('TO', 'Tonga'), 
   ('TT', 'Trinidad & Tobago'), 
   ('TN', 'Tunisia'), 
   ('TR', 'Turkey'), 
   ('TM', 'Turkmenistan'), 
   ('TC', 'Turks & Caicos Islands'), 
   ('TV', 'Tuvalu'), 
   ('UG', 'Uganda'), 
   ('UA', 'Ukraine'), 
   ('AE', 'United Arab Emirates'), 
   ('GB', 'United Kingdom (Great Britain)'), 
   ('UM', 'United States Minor Outlying Islands'), 
   ('VI', 'United States Virgin Islands'), 
   ('UY', 'Uruguay'), 
   ('UZ', 'Uzbekistan'), 
   ('VU', 'Vanuatu'), 
   ('VA', 'Vatican City State (Holy See)'), 
   ('VE', 'Venezuela'), 
   ('VN', 'Viet Nam'), 
   ('WF', 'Wallis & Futuna Islands'), 
   ('EH', 'Western Sahara'), 
   ('YE', 'Yemen'), 
   ('YU', 'Yugoslavia'), 
   ('ZR', 'Zaire'), 
   ('ZM', 'Zambia'), 
   ('ZW', 'Zimbabwe'), 
)


GENDER_CHOICES = (
    ('unknown', 'gender?'),
    ('male', 'male'),
    ('female', 'female'),
    ('complicated', 'it\'s complicated')
)

class CountryField(models.CharField):
    def __init__(self, *args, **kwargs):
        kwargs.setdefault('max_length', 2)
        kwargs.setdefault('choices', COUNTRIES)
        kwargs.setdefault('default', 'ZZ')

        super(CountryField, self).__init__(*args, **kwargs)

    def get_internal_type(self):
        return "CharField"

class AgeField(models.CharField):
    def __init__(self, *args, **kwargs):
        kwargs.setdefault('max_length', 7)
        kwargs.setdefault('choices', AGE_CHOICES)
        kwargs.setdefault('default', 'unknown')

        super(AgeField, self).__init__(*args, **kwargs)

    def get_internal_type(self):
        return "CharField"

class GenderField(models.CharField):
    def __init__(self, *args, **kwargs):
        kwargs.setdefault('max_length', 7)
        kwargs.setdefault('choices', GENDER_CHOICES)
        kwargs.setdefault('default', 'unknown')

        super(GenderField, self).__init__(*args, **kwargs)

    def get_internal_type(self):
        return "CharField"